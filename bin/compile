#!/bin/bash

indent() {
  sed -u 's/^/       /'
}

echo "-----> Install ImageMagick with WebP, AOM, and HEIF support"

BUILD_DIR=$1
CACHE_DIR=$2
VENDOR_DIR="$BUILD_DIR/vendor"
IMAGE_MAGICK_INSTALL_DIR="$VENDOR_DIR/imagemagick"
HEIF_INSTALL_DIR="$VENDOR_DIR/heif"
AOM_INSTALL_DIR="$VENDOR_DIR/aom"
WEBP_INSTALL_DIR="$VENDOR_DIR/webp"
IMAGE_MAGICK_VERSION=7.0.11-12
HEIF_VERSION=1.11.0
AOM_VERSION=3.0.0
WEBP_VERSION=1.2.0
IMAGE_MAGICK_CACHE_FILE="$CACHE_DIR/imagemagick-$IMAGE_MAGICK_VERSION.tar.gz"
HEIF_CACHE_FILE="$CACHE_DIR/heif-$HEIF_VERSION.tar.gz"
AOM_CACHE_FILE="$CACHE_DIR/aom-$AOM_VERSION.tar.gz"
WEBP_CACHE_FILE="$CACHE_DIR/webp-$WEBP_VERSION.tar.gz"

if [ ! -d $CACHE_DIR ]; then
  mkdir -p $CACHE_DIR
fi

if [ ! -d $VENDOR_DIR ]; then
  mkdir -p $VENDOR_DIR
fi

if [ ! -f $WEBP_CACHE_FILE ]; then
  echo "-----> Building WebP"
  # Install WebP
  git clone https://chromium.googlesource.com/webm/libwebp
  cd libwebp
  git checkout v${WEBP_VERSION}
  export CPPFLAGS="-I$WEBP_INSTALL_DIR/include"
  export LDFLAGS="-L$WEBP_INSTALL_DIR/lib"
  ./autogen.sh && ./configure --enable-shared --enable-libwebpdecoder --enable-libwebpdemux --enable-libwebpmux --enable-static=no --prefix=$WEBP_INSTALL_DIR
  make && make install
  ldconfig /usr/local/lib
  cd ..
  rm -rf libwebp

  # cache for future deploys
  echo "-----> Caching WebP installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="webp"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $WEBP_CACHE_FILE
else
  # cache exists, extract it
  echo "-----> Extracting WebP $WEBP_CACHE_FILE => $VENDOR_DIR"
  tar xzf $WEBP_CACHE_FILE -C $VENDOR_DIR
fi

if [ ! -f $AOM_CACHE_FILE ]; then
  echo "-----> Building AOM"
  # Install AOM
  git clone https://aomedia.googlesource.com/aom
  cd aom
  git checkout v${AOM_VERSION}
  cd ..
  mkdir build_aom
  cd build_aom
  cmake ../aom/ -DENABLE_TESTS=0 -DBUILD_SHARED_LIBS=1
  make && make install
  ldconfig /usr/local/lib
  cd ..
  rm -rf aom
  rm -rf build_aom

  # cache for future deploys
  echo "-----> Caching AOM installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="aom"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $AOM_CACHE_FILE
else
  # cache exists, extract it
  echo "-----> Extracting AOM $AOM_CACHE_FILE => $VENDOR_DIR"
  tar xzf $AOM_CACHE_FILE -C $VENDOR_DIR
fi

if [ ! -f $HEIF_CACHE_FILE ]; then
  echo "-----> Building HEIF"
  # Install HEIF
  curl -L https://github.com/strukturag/libheif/releases/download/v${HEIF_VERSION}/libheif-${HEIF_VERSION}.tar.gz -o libheif.tar.gz
  tar -xzvf libheif.tar.gz
  cd libheif-${HEIF_VERSION}
  export CPPFLAGS="-I$HEIF_INSTALL_DIR/include"
  export LDFLAGS="-L$HEIF_INSTALL_DIR/lib"
  ./autogen.sh && ./configure --prefix=$HEIF_INSTALL_DIR
  make && make install
  cd ..
  ldconfig /usr/local/lib
  rm -rf libheif-${HEIF_VERSION}
  rm libheif.tar.gz

  # cache for future deploys
  echo "-----> Caching HEIF installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="heif"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $HEIF_CACHE_FILE
else
  # cache exists, extract it
  echo "-----> Extracting HEIF $HEIF_CACHE_FILE => $VENDOR_DIR"
  tar xzf $HEIF_CACHE_FILE -C $VENDOR_DIR
fi

if [ ! -f $IMAGE_MAGICK_CACHE_FILE ]; then
  echo "-----> Building ImageMagick"
  # Install ImageMagick
  git clone https://github.com/ImageMagick/ImageMagick.git
  cd ImageMagick
  git checkout ${IM_VERSION}
  export CPPFLAGS="-I$IMAGE_MAGICK_INSTALL_DIR/include"
  export LDFLAGS="-L$IMAGE_MAGICK_INSTALL_DIR/lib"
  ./configure --without-magick-plus-plus --disable-docs --disable-static --prefix=$IMAGE_MAGICK_INSTALL_DIR
  make && make install
  ldconfig /usr/local/lib
  cd ..
  rm -rf ImageMagick

  # cache for future deploys
  echo "-----> Caching ImageMagick installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="imagemagick"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $IMAGE_MAGICK_CACHE_FILE
else
  # cache exists, extract it
  echo "-----> Extracting ImageMagick $IMAGE_MAGICK_CACHE_FILE => $VENDOR_DIR"
  mkdir -p $VENDOR_DIR
  tar xzf $IMAGE_MAGICK_CACHE_FILE -C $VENDOR_DIR
fi

# update PATH and LD_LIBRARY_PATH
echo "-----> Updating environment variables"
PROFILE_PATH="$BUILD_DIR/.profile.d/imagemagick.sh"
ACTUAL_INSTALL_PATH="$HOME/vendor/imagemagick"
mkdir -p $(dirname $PROFILE_PATH)
echo "export PATH=$ACTUAL_INSTALL_PATH/bin:\$PATH" >> $PROFILE_PATH
echo "export LD_LIBRARY_PATH=$ACTUAL_INSTALL_PATH/lib:\$LD_LIBRARY_PATH:/usr/local/lib" >> $PROFILE_PATH
echo "export MAGICK_CONFIGURE_PATH=$ACTUAL_INSTALL_PATH" >> $PROFILE_PATH
echo "-----> Done updating environment variables. All set for ImageMagick."
